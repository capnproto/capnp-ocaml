OCAMLINCLUDES += ../runtime
OCAML_LIBS += ../runtime/libcapnp
OCAML_CLIBS = libfastrand
OCAMLPACKS += core

Camlp4o(module) =
    section
        OCAMLFINDFLAGS += -syntax camlp4o
        $(module).cmi:
        $(module).cmo:
        $(module).o:
        $(module).cmx:

Camlp4o(capnpCarsales)
Camlp4o(capnpCatrank)
Camlp4o(capnpEval)

GENERATED = \
  c2b2b.mli \
  c2b2b.ml \
  catrank.mli \
  catrank.ml \
  carsales.mli \
  carsales.ml \
  eval.mli \
  eval.ml

MODULES = \
  c2b2b \
  catrank \
  carsales \
  eval \
  methods \
  fastRand \
  testCaseSig \
  capnpCarsales \
  capnpCatrank \
  capnpEval \
  methods \
  main


PROGRAM = bench

# We use our local copy of the capnproto repo in order to generate
# code based on the benchmark schema.
COMPILER = ../compiler/capnpc-ocaml
CAPNP_REPO_DIR = ../../capnproto

$(GENERATED): $(COMPILER)
	capnp compile -o $(COMPILER) -I $(CAPNP_REPO_DIR)/c++/src \
		$(CAPNP_REPO_DIR)/c++/src/capnp/c++.capnp \
		$(CAPNP_REPO_DIR)/c++/src/capnp/benchmark/catrank.capnp \
		$(CAPNP_REPO_DIR)/c++/src/capnp/benchmark/carsales.capnp \
		$(CAPNP_REPO_DIR)/c++/src/capnp/benchmark/eval.capnp


open build/C
CFLAGS += -O3 -I$(shell $(OCAMLC) -where)

StaticCLibrary(libfastrand, fast_rand)


OCAMLDEP_MODULES_ENABLED = false
LocalOCamlGeneratedFiles($(GENERATED))
OCamlProgram($(PROGRAM), $(MODULES))


# Some sort of a bug in omake, the OCamlProgram directive fails to build c2b2b.cmi
# as a dependency of the code which imports it.

carsales: $(PROGRAM)
	ln -f -s $(PROGRAM) carsales

catrank: $(PROGRAM)
	ln -f -s $(PROGRAM) catrank

eval: $(PROGRAM)
	ln -f -s $(PROGRAM) eval

.PHONY: all-bench bench-clean bench-distclean

all-bench: carsales catrank

bench-clean:
	rm -f $(PROGRAM)$(EXE) $(PROGRAM).opt $(PROGRAM).run \
		carsales catrank eval $(GENERATED) *.cmi *.cmo *.cmx *.cma *.cmxa *.cmxs \
		*.a *.o

bench-distclean: bench-clean
	rm -f *.omc
	bash -c 'if [ -f .capnp-repo ]; then \
		cat .capnp-repo | xargs rm -rf --preserve-root; \
		rm .capnp-repo; \
		fi'


