OCAMLINCLUDES += ../runtime
OCAML_LIBS += ../runtime/libcapnp
OCAMLPACKS += oUnit

# It's OK if tests run slowly; if something goes wrong, we want the
# best possible backtrace support.
NATIVE_ENABLED = false

GENERATED = \
  c2b2b.mli \
  c2b2b.ml \
  test.mli \
  test.ml \
  test_import.mli \
  test_import.ml \
  testLists.mli \
  testLists.ml

TEST_MODULES = \
  c2b2b \
  test \
  test_import \
  testBytesStorage \
  testCodecs \
  testLists \
  testMisc \
  testEncoding

PROGRAM = run-tests

# We use our local copy of the capnproto repo in order to generate
# code based on the "test.capnp" schema.
COMPILER = ../compiler/capnpc-ocaml
CAPNP_REPO_DIR = ../../capnproto

$(GENERATED): $(COMPILER)
	capnp compile -o $(COMPILER) -I $(CAPNP_REPO_DIR)/c++/src \
		$(CAPNP_REPO_DIR)/c++/src/capnp/c++.capnp \
		$(CAPNP_REPO_DIR)/c++/src/capnp/test.capnp \
		$(CAPNP_REPO_DIR)/c++/src/capnp/test-import.capnp \
		testLists.capnp

OCAMLDEP_MODULES_ENABLED = false
LocalOCamlGeneratedFiles($(GENERATED))
OCamlProgram($(PROGRAM), $(TEST_MODULES))

.PHONY: tests-clean tests-distclean

tests-clean:
	rm -f $(PROGRAM)$(EXE) $(PROGRAM).opt $(PROGRAM).run \
		*.cmi *.cmo *.cmx *.cma *.cmxa *.cmxs *.a *.o \
		test.mli test.ml

tests-distclean: tests-clean
	rm -f *.omc
	bash -c 'if [ -f .capnp-repo ]; then \
		cat .capnp-repo | xargs rm -rf --preserve-root; \
		rm .capnp-repo; \
		fi'

